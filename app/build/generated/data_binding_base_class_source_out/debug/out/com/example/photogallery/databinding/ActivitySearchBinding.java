// Generated by view binder compiler. Do not edit!
package com.example.photogallery.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.EditText;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import com.example.photogallery.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivitySearchBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final Button btnApplySearch;

  @NonNull
  public final Button btnClear;

  @NonNull
  public final EditText dateFromText;

  @NonNull
  public final EditText dateToText;

  @NonNull
  public final EditText keywordSearchText;

  @NonNull
  public final EditText latText;

  @NonNull
  public final EditText lngText;

  private ActivitySearchBinding(@NonNull ConstraintLayout rootView, @NonNull Button btnApplySearch,
      @NonNull Button btnClear, @NonNull EditText dateFromText, @NonNull EditText dateToText,
      @NonNull EditText keywordSearchText, @NonNull EditText latText, @NonNull EditText lngText) {
    this.rootView = rootView;
    this.btnApplySearch = btnApplySearch;
    this.btnClear = btnClear;
    this.dateFromText = dateFromText;
    this.dateToText = dateToText;
    this.keywordSearchText = keywordSearchText;
    this.latText = latText;
    this.lngText = lngText;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivitySearchBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivitySearchBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_search, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivitySearchBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.btnApplySearch;
      Button btnApplySearch = rootView.findViewById(id);
      if (btnApplySearch == null) {
        break missingId;
      }

      id = R.id.btnClear;
      Button btnClear = rootView.findViewById(id);
      if (btnClear == null) {
        break missingId;
      }

      id = R.id.date_from_text;
      EditText dateFromText = rootView.findViewById(id);
      if (dateFromText == null) {
        break missingId;
      }

      id = R.id.date_to_text;
      EditText dateToText = rootView.findViewById(id);
      if (dateToText == null) {
        break missingId;
      }

      id = R.id.keyword_search_text;
      EditText keywordSearchText = rootView.findViewById(id);
      if (keywordSearchText == null) {
        break missingId;
      }

      id = R.id.lat_text;
      EditText latText = rootView.findViewById(id);
      if (latText == null) {
        break missingId;
      }

      id = R.id.lng_text;
      EditText lngText = rootView.findViewById(id);
      if (lngText == null) {
        break missingId;
      }

      return new ActivitySearchBinding((ConstraintLayout) rootView, btnApplySearch, btnClear,
          dateFromText, dateToText, keywordSearchText, latText, lngText);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
